import{b as A,t as G}from"../chunks/disclose-version.BcvwuTr4.js";import{u as H,w as T,z as h,A as W,B as q}from"../chunks/runtime.Cjuk95Ml.js";import{s as D}from"../chunks/attributes.Bt4tGm2O.js";import{b as E}from"../chunks/this.DsiEjiIA.js";import{o as F}from"../chunks/index-client.DibeTDnh.js";import{C as L,A as Q,i as N,R as U,v as V,S as z,a as k,d as J}from"../chunks/Scene.D-IVrs4_.js";import{g as C}from"../chunks/globalState.svelte.CHPqU7Zl.js";import{R as K,a as X,b as Y,c as Z,Q as $}from"../chunks/miscControls.svelte.CK7hsPxu.js";import{a as ee,b as te,l as ae,p as ne,c as oe}from"../chunks/cameraControls.DDVdYK0m.js";import{S as ie}from"../chunks/SceneObject.Dp-QgdB2.js";var re=G('<canvas class="h-full w-full"></canvas>');function fe(I,R){H(R,!0);let i=W(void 0);const a=new L;C.camera=a;const l=new K({clearColor:"white",fragmentColor:"blue",cameraPosition:a.position,projectionMatrixInverse:a.projectionMatrixInverse,viewMatrixInverse:a.viewMatrixInverse,numberOfSteps:500,minimumHitDistance:.001,maximumTraceDistance:1e3,subsurfaceDepth:2});X(l);const b=ee();te(a),Y(),F(async()=>{try{if(!h(i))return;const r=h(i).getContext("webgpu");if(!r)return;const S=new Q({eventSource:h(i),camera:a,distance:80});C.contols=S;const{device:d}=await N({deviceOptions:t=>({requiredLimits:{maxBufferSize:t.limits.maxBufferSize}})}),u=new U({context:r,device:d,clearColor:"white"});async function B(){const t=await ae(b.molecule.value);if(!t)throw new Error("PDB Not found");const P=ne(t),{atoms:w}=oe(P);let e={width:{min:0,max:0},height:{min:0,max:0},depth:{min:0,max:0}};const s=10;for(const c of w){const[n,m,o]=c.position;e.width.min=Math.min(e.width.min,n-s),e.width.max=Math.max(e.width.max,n+s),e.height.min=Math.min(e.height.min,m-s),e.height.max=Math.max(e.height.max,m+s),e.depth.min=Math.min(e.depth.min,o-s),e.depth.max=Math.max(e.depth.max,o+s)}function x(c,n,m,o,_){return(_-o)*((c-n)/(m-n))+o}const f=128,g=128,v=128;for(const c of w){const[n,m,o]=c.position;c.position=V.create(x(n,e.width.min,e.width.max,0,f),x(m,e.height.min,e.height.max,0,g),x(o,e.depth.min,e.depth.max,0,v))}console.time("Compute SDF Texture");const j=await Z({device:d,width:f,height:g,depth:v,radius:2,scale:4,atoms:w});console.timeEnd("Compute SDF Texture"),l.updateBufferValues({width:f,height:g,depth:v});const O=new ie(new $,l,[j]),M=new z(O);return await M.load(d),u.load(M),M}let y=new z;b.molecule.onChange(async()=>{y=await B()}),k({canvas:h(i),device:d,onResize:t=>{a.aspect=t.clientWidth/t.clientHeight,u.onCanvasResized(t.width,t.height)}}),console.log("draw"),J(t=>{C.fps=1e3/t,S.update(t),l.update(d,{cameraPosition:a.position,projectionMatrixInverse:a.projectionMatrixInverse,viewMatrixInverse:a.viewMatrixInverse}),u.render(y,{camera:a})})}catch(r){alert(r)}});var p=re();D(p,"width",window.innerWidth),D(p,"height",window.innerHeight),E(p,r=>q(i,r),()=>h(i)),A(I,p),T()}export{fe as component};
